Scheme of Maneuver:
Task 1
> Linux Ops Station
→ INTERNET_HOST
-→ BLUE_Host-1
-→ BLUE_Host-3
-→ BLUE_INT_DMZ_HOST-1
Target Section:
Pivot
Hostname: INTERNET_HOST
IP: 10.10.0.40 (Use the provided floating IP only for login from outside of the network
Creds: PROVIDED CREDENTIALS
Action: Utilize to Pivot into Gorgan Cyberspace and test filters & Rules
T1
Hostname: BLUE_Host-1
IP: 172.16.82.106
Creds: student : password
Action: Implement Host Filtering to Allow and Restrict Communications and Traffic
T2
Hostname: BLUE_Host-3
IP: 172.16.82.112
Creds: student : password
Action: Implement Host Filtering to Allow and Restrict Communications and Traffic
T3
Hostname: BLUE_INT_DMZ_HOST-1 
IP: 172.16.40.10
Creds: student : password
Action: Implement Host Filtering to Allow and Restrict Communications and Traffic
T4
Hostname: (Will be provided by Mission Command)
IP: 10.50.XXX.XXX (Will be Provided by Mission Command)
creds: studentX:passwordX (X = Student Number)
Known Ports: Unknown
Action: Interrogate Target and validate Signatures
T5
Hostname: BLUE_PRIV_HOST-1
IP: 192.168.1.10
creds: student : password
Action: Allow traffic through NAT Capabilities
T6
Hostname: BLUE_PRIV_HOST-3
IP: 192.168.3.30
creds: student : password
Action: Allow traffic through NAT Capabilities

IPTable Rule Definitions

From T1 (Blue Host 1)(172.16.82.106)
    • Allow New and Established traffic to/from via SSH, TELNET, and RDP

      iptables -A INPUT -p tcp -m multiport --ports 22,23,3389 -m state --state NEW,ESTABLISHED -j ACCEPT
      iptables -A OUTPUT -p tcp -m multiport --ports 22,23,3389 -m state --state NEW,ESTABLISHED -j ACCEPT


    • Change the Default Policy in the Filter Table for the INPUT, OUTPUT, and FORWARD chains to DROP
	sudo iptables -P INPUT DROP
	sudo iptables -P OUTPUT DROP
	sudo iptables -P FORWARD DROP

    • Allow ping (ICMP) requests (and reply) to and from the Pivot(Internet-Host 10.10.0.40)
      

Specify inbound ICMP	
	sudo iptables -A INPUT -p icmp --icmp-type 8 -s 10.10.0.40 -j ACCEPT
	sudo iptables -A OUTPUT -p icmp --icmp-type 0 -s 10.10.0.40 -j ACCEPT

Specify outboud ICMP	
	sudo iptables -A OUTPUT -p icmp --icmp-type 8 -d 10.10.0.40 -j ACCEPT
	sudo iptables -A INPUT -p icmp --icmp-type 0 -d 10.10.0.40-j ACCEPT
    • Allow ports 6579 and 4444 for both udp and tcp traffic
Specify TCP ports using multiport
	sudo iptables -A INPUT -p tcp -m multiport --ports 6579,4444 -j ACCEPT
	sudo iptables -A OUTPUT -p tcp -m multiport --ports 6579,4444 -j ACCEPT
Specify UDP ports using multiport
	sudo iptables -A INPUT -p udp -m multiport --ports 6579,4444 -j ACCEPT
	sudo iptables -A OUTPUT -p udp -m multiport --ports 6579,4444 -j ACCEPT
    • Allow New and Established traffic to/from via HTTP
Specify TCP states using multiport

sudo iptables -A INPUT -p tcp -m multiport --ports 80 -m state --state NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -p tcp -m multiport --ports 80 -m state --state NEW,ESTABLISHED -j ACCEPT

Once these steps have been completed and tested, go to Pivot and open up a netcat listener on port 9001 and wait up to 2 minutes for your flag. If you did not successfully accomplish the tasks above, then you will not receive the flag.
